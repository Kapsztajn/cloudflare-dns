name: Create release
description: Create Github release after production deployment

runs:
  using: composite
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Get Tags
      id: tags
      run: |
        git fetch --tags
        echo "Tags fetched"
    - name: Get Latest Tag
      id: latest-tag
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        IFS='.' read -r -a version_parts <<< "$latest_tag"
        major="${version_parts[0]}"
        minor="${version_parts[1]}"
        patch="${version_parts[2]}"
        if [[ "${{ github.event.pull_request.title }}" == hotfix* ]]; then
          new_version="$major.$minor.$((patch + 1))"
        elif [[ "${{ github.event.pull_request.title }}" == major* ]]; then
          new_version="$((major + 1)).0.0"
        else
          new_version="$major.$((minor + 1)).0"
        fi
    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |
        gh release create '${{new_version}}' \
            --repo="$GITHUB_REPOSITORY" \
            --generate-notes